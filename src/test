import org.junit.Test;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.assertEquals;

public class test {
    public static void main(String[] args) {
        ArrayList<Integer> f= new ArrayList<Integer>();
        f.add(1000);
        f.add(1000000);
        Map<String , BigDecimal> map = match(f);
        for(Map.Entry<String , BigDecimal> entry:map.entrySet()){
            System.out.println("The " + entry.getKey() +" is " + entry.getValue());
        }
    }
    public static Map<String , BigDecimal> match(ArrayList<Integer> inputNumber){
        Map<String , BigDecimal> totalResultMap = new HashMap<>();
        BigDecimal num1 = new BigDecimal(1);
        BigDecimal num2 = new BigDecimal(1);
        BigDecimal singleSum = new BigDecimal(0);
        BigDecimal total = new BigDecimal(0);
        BigDecimal fixedValue = new BigDecimal(2);
        for(int item :inputNumber ){
            if(item==1){
                System.out.println("The sum of "+item+" Numbers is "+1);
            }else{
                for(int d=2;d<item;d++){
                    singleSum = num1.add(num2);
                    num1 = num2;
                    num2 = singleSum;
                    total = total.add(singleSum);
                }
                totalResultMap.put("single" + String.valueOf(item),num2);
                totalResultMap.put("total" + String.valueOf(item),total.add(fixedValue));
            }
        }
        return totalResultMap;
    }

    @Test
    public void testMatch(){
        ArrayList<Integer> f= new ArrayList<Integer>();
        f.add(10);
        Map<String , BigDecimal> map = match(f);
        //Verify the all of Fib of sum
        BigDecimal checkTotalResult = new BigDecimal(143);
        //Verify the current Fib
        BigDecimal checkSingleResult = new BigDecimal(55);
        assertEquals(checkTotalResult,map.get("total10"));
        assertEquals(checkSingleResult,map.get("single10"));
    }
}
